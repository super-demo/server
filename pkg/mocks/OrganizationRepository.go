// Code generated by mockery v2.50.4. DO NOT EDIT.

package mocks

import (
	models "server/internal/core/models"

	mock "github.com/stretchr/testify/mock"

	repositories "server/internal/core/repositories"
)

// OrganizationRepository is an autogenerated mock type for the OrganizationRepository type
type OrganizationRepository struct {
	mock.Mock
}

// BeginLog provides a mock function with no fields
func (_m *OrganizationRepository) BeginLog() (repositories.OrganizationRepository, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for BeginLog")
	}

	var r0 repositories.OrganizationRepository
	var r1 error
	if rf, ok := ret.Get(0).(func() (repositories.OrganizationRepository, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() repositories.OrganizationRepository); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(repositories.OrganizationRepository)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// CheckOrganizationExistsByName provides a mock function with given fields: name
func (_m *OrganizationRepository) CheckOrganizationExistsByName(name string) (bool, error) {
	ret := _m.Called(name)

	if len(ret) == 0 {
		panic("no return value specified for CheckOrganizationExistsByName")
	}

	var r0 bool
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (bool, error)); ok {
		return rf(name)
	}
	if rf, ok := ret.Get(0).(func(string) bool); ok {
		r0 = rf(name)
	} else {
		r0 = ret.Get(0).(bool)
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(name)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Commit provides a mock function with no fields
func (_m *OrganizationRepository) Commit() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Commit")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateOrganization provides a mock function with given fields: organization
func (_m *OrganizationRepository) CreateOrganization(organization *models.Organization) (*models.Organization, error) {
	ret := _m.Called(organization)

	if len(ret) == 0 {
		panic("no return value specified for CreateOrganization")
	}

	var r0 *models.Organization
	var r1 error
	if rf, ok := ret.Get(0).(func(*models.Organization) (*models.Organization, error)); ok {
		return rf(organization)
	}
	if rf, ok := ret.Get(0).(func(*models.Organization) *models.Organization); ok {
		r0 = rf(organization)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Organization)
		}
	}

	if rf, ok := ret.Get(1).(func(*models.Organization) error); ok {
		r1 = rf(organization)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteOrganization provides a mock function with given fields: organization
func (_m *OrganizationRepository) DeleteOrganization(organization *models.Organization) error {
	ret := _m.Called(organization)

	if len(ret) == 0 {
		panic("no return value specified for DeleteOrganization")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(*models.Organization) error); ok {
		r0 = rf(organization)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetOrganizationById provides a mock function with given fields: id
func (_m *OrganizationRepository) GetOrganizationById(id int) (*models.Organization, error) {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for GetOrganizationById")
	}

	var r0 *models.Organization
	var r1 error
	if rf, ok := ret.Get(0).(func(int) (*models.Organization, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(int) *models.Organization); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.Organization)
		}
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOrganizationListByUserId provides a mock function with given fields: id
func (_m *OrganizationRepository) GetOrganizationListByUserId(id int) (*[]models.Organization, error) {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for GetOrganizationListByUserId")
	}

	var r0 *[]models.Organization
	var r1 error
	if rf, ok := ret.Get(0).(func(int) (*[]models.Organization, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(int) *[]models.Organization); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]models.Organization)
		}
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Rollback provides a mock function with no fields
func (_m *OrganizationRepository) Rollback() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Rollback")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewOrganizationRepository creates a new instance of OrganizationRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOrganizationRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *OrganizationRepository {
	mock := &OrganizationRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
