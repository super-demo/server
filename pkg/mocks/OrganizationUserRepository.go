// Code generated by mockery v2.50.4. DO NOT EDIT.

package mocks

import (
	models "server/internal/core/models"

	mock "github.com/stretchr/testify/mock"

	repositories "server/internal/core/repositories"
)

// OrganizationUserRepository is an autogenerated mock type for the OrganizationUserRepository type
type OrganizationUserRepository struct {
	mock.Mock
}

// BeginLog provides a mock function with no fields
func (_m *OrganizationUserRepository) BeginLog() (repositories.OrganizationUserRepository, error) {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for BeginLog")
	}

	var r0 repositories.OrganizationUserRepository
	var r1 error
	if rf, ok := ret.Get(0).(func() (repositories.OrganizationUserRepository, error)); ok {
		return rf()
	}
	if rf, ok := ret.Get(0).(func() repositories.OrganizationUserRepository); ok {
		r0 = rf()
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(repositories.OrganizationUserRepository)
		}
	}

	if rf, ok := ret.Get(1).(func() error); ok {
		r1 = rf()
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Commit provides a mock function with no fields
func (_m *OrganizationUserRepository) Commit() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Commit")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// CreateOrganizationUser provides a mock function with given fields: organizationUser
func (_m *OrganizationUserRepository) CreateOrganizationUser(organizationUser *models.OrganizationUser) (*models.OrganizationUser, error) {
	ret := _m.Called(organizationUser)

	if len(ret) == 0 {
		panic("no return value specified for CreateOrganizationUser")
	}

	var r0 *models.OrganizationUser
	var r1 error
	if rf, ok := ret.Get(0).(func(*models.OrganizationUser) (*models.OrganizationUser, error)); ok {
		return rf(organizationUser)
	}
	if rf, ok := ret.Get(0).(func(*models.OrganizationUser) *models.OrganizationUser); ok {
		r0 = rf(organizationUser)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.OrganizationUser)
		}
	}

	if rf, ok := ret.Get(1).(func(*models.OrganizationUser) error); ok {
		r1 = rf(organizationUser)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// DeleteOrganizationUser provides a mock function with given fields: id
func (_m *OrganizationUserRepository) DeleteOrganizationUser(id int) error {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for DeleteOrganizationUser")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(id)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// DeleteOrganizationUserByOrganizationId provides a mock function with given fields: organizationId
func (_m *OrganizationUserRepository) DeleteOrganizationUserByOrganizationId(organizationId int) error {
	ret := _m.Called(organizationId)

	if len(ret) == 0 {
		panic("no return value specified for DeleteOrganizationUserByOrganizationId")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(int) error); ok {
		r0 = rf(organizationId)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// GetOrganizationUserByEmail provides a mock function with given fields: email
func (_m *OrganizationUserRepository) GetOrganizationUserByEmail(email string) (*models.OrganizationUser, error) {
	ret := _m.Called(email)

	if len(ret) == 0 {
		panic("no return value specified for GetOrganizationUserByEmail")
	}

	var r0 *models.OrganizationUser
	var r1 error
	if rf, ok := ret.Get(0).(func(string) (*models.OrganizationUser, error)); ok {
		return rf(email)
	}
	if rf, ok := ret.Get(0).(func(string) *models.OrganizationUser); ok {
		r0 = rf(email)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.OrganizationUser)
		}
	}

	if rf, ok := ret.Get(1).(func(string) error); ok {
		r1 = rf(email)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOrganizationUserById provides a mock function with given fields: id
func (_m *OrganizationUserRepository) GetOrganizationUserById(id int) (*models.OrganizationUser, error) {
	ret := _m.Called(id)

	if len(ret) == 0 {
		panic("no return value specified for GetOrganizationUserById")
	}

	var r0 *models.OrganizationUser
	var r1 error
	if rf, ok := ret.Get(0).(func(int) (*models.OrganizationUser, error)); ok {
		return rf(id)
	}
	if rf, ok := ret.Get(0).(func(int) *models.OrganizationUser); ok {
		r0 = rf(id)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.OrganizationUser)
		}
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(id)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// GetOrganizationUserListByOrganizationId provides a mock function with given fields: organizationId
func (_m *OrganizationUserRepository) GetOrganizationUserListByOrganizationId(organizationId int) (*[]models.OrganizationUser, error) {
	ret := _m.Called(organizationId)

	if len(ret) == 0 {
		panic("no return value specified for GetOrganizationUserListByOrganizationId")
	}

	var r0 *[]models.OrganizationUser
	var r1 error
	if rf, ok := ret.Get(0).(func(int) (*[]models.OrganizationUser, error)); ok {
		return rf(organizationId)
	}
	if rf, ok := ret.Get(0).(func(int) *[]models.OrganizationUser); ok {
		r0 = rf(organizationId)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*[]models.OrganizationUser)
		}
	}

	if rf, ok := ret.Get(1).(func(int) error); ok {
		r1 = rf(organizationId)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// Rollback provides a mock function with no fields
func (_m *OrganizationUserRepository) Rollback() error {
	ret := _m.Called()

	if len(ret) == 0 {
		panic("no return value specified for Rollback")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func() error); ok {
		r0 = rf()
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// UpdateOrganizationUser provides a mock function with given fields: organizationUser
func (_m *OrganizationUserRepository) UpdateOrganizationUser(organizationUser *models.OrganizationUser) (*models.OrganizationUser, error) {
	ret := _m.Called(organizationUser)

	if len(ret) == 0 {
		panic("no return value specified for UpdateOrganizationUser")
	}

	var r0 *models.OrganizationUser
	var r1 error
	if rf, ok := ret.Get(0).(func(*models.OrganizationUser) (*models.OrganizationUser, error)); ok {
		return rf(organizationUser)
	}
	if rf, ok := ret.Get(0).(func(*models.OrganizationUser) *models.OrganizationUser); ok {
		r0 = rf(organizationUser)
	} else {
		if ret.Get(0) != nil {
			r0 = ret.Get(0).(*models.OrganizationUser)
		}
	}

	if rf, ok := ret.Get(1).(func(*models.OrganizationUser) error); ok {
		r1 = rf(organizationUser)
	} else {
		r1 = ret.Error(1)
	}

	return r0, r1
}

// NewOrganizationUserRepository creates a new instance of OrganizationUserRepository. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewOrganizationUserRepository(t interface {
	mock.TestingT
	Cleanup(func())
}) *OrganizationUserRepository {
	mock := &OrganizationUserRepository{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
